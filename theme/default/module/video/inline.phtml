<?php
    global $Locale, $Translate;
    $errMsg = new Phools_Message_Default('Video player cannot play back this video.');
    $licid = uniqid();
    $styleVideoWith = '';
    if(isset($_REQUEST['width']) && !empty($_REQUEST['width']))
        $styleVideoWith = 'style="width:'.(int)$_REQUEST['width'] . 'px"';
?>
<video <?php echo $styleVideoWith?> data-tap-disabled="true" id="<?php echo htmlentities($videoObjectIdentifier, ENT_QUOTES, 'UTF-8') ?>" data-licid="<?php echo $licid;?>" controls style="max-width: 100%" oncontextmenu="return false;">
    <?php
       echo '<source src="' . $url . '" type="video/' . $ext . '"></source>';
    ?>
</video>
<p id="e_<?php echo htmlentities($videoObjectIdentifier, ENT_QUOTES, 'UTF-8') ?>" style="display: none;"><?php echo $errMsg -> localize($Locale, $Translate);?></p>
<?php echo (!empty($license)? $license : '<p class="edu_sharing_filename">' . htmlentities($title, ENT_QUOTES, 'UTF-8') . '</p>')?>
<?php echo $metadata?>
<script>
    document.getElementById('<?php echo htmlentities($videoObjectIdentifier, ENT_QUOTES, 'UTF-8') ?>').addEventListener('error', function(e) {
	    switch (e.target.error.code) {
    	    case e.target.error.MEDIA_ERR_ABORTED:
       		case e.target.error.MEDIA_ERR_NETWORK:
      		case e.target.error.MEDIA_ERR_DECODE:
      		case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
    	  		document.getElementById('<?php echo htmlentities($videoObjectIdentifier, ENT_QUOTES, 'UTF-8') ?>').style.display = 'none';
          		document.getElementById('e_<?php echo htmlentities($videoObjectIdentifier, ENT_QUOTES, 'UTF-8') ?>').style.display = 'block';
        	break;
      		default:
        	return;
      }
    }, true);

    function trackError() {
    	var url = '<?php echo htmlentities($logger, ENT_QUOTES, 'UTF-8') ?>';
    	var data = '<?php echo htmlentities($cachePath, ENT_QUOTES, 'UTF-8') ?>';
    	try {
    		x = new(this.XMLHttpRequest || ActiveXObject)('MSXML2.XMLHTTP.3.0');
    		x.open(data ? 'POST' : 'GET', url, 1);
    		x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    		x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    		x.send(data)
    	} catch (e) {
    		window.console && console.log(e);
    	}
    };
    
    var obj_<?php echo $licid;?> = document.querySelector("[data-licid='<?php echo $licid;?>']");
    var wrapper_<?php echo $licid;?> = obj_<?php echo $licid;?>.parentNode;
    if((' ' + wrapper_<?php echo $licid?>.className + ' ').indexOf(' edu_wrapper ') > -1) {
	    var objWidth_<?php echo $licid;?> = obj_<?php echo $licid;?>.clientWidth + 'px';
	    for (var i = 0; i < wrapper_<?php echo $licid;?>.childNodes.length; i++) {
	    	if (wrapper_<?php echo $licid;?>.childNodes[i].className == "license") {
	        	wrapper_<?php echo $licid;?>.childNodes[i].style.width = objWidth_<?php echo $licid;?>;
	    		wrapper_<?php echo $licid;?>.style.height = 'auto';
	          	break;
	        }
	    }
    }
</script>